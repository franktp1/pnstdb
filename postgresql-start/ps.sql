--@ps/PSDROP

--prompt "About to create PS tables"
CREATE TABLE PS_RECURRINGEVENT ( 
  OID                     NUMERIC(20)            NOT NULL,
  REQUESTTYPE             VARCHAR(512  )   NOT NULL,
  STARTDATE               DATE                  NOT NULL,
  ENDDATE                 DATE                  NOT NULL,
  DAYOFWEEK               VARCHAR(512  )   NOT NULL,
  REQUESTFLG              NUMERIC(1)             NULL) ; 

CREATE TABLE PS_CONTAINERUSEAGERULE ( 
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NULL,
  TPOID                   NUMERIC(20)            NOT NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )     NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   	NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   	NULL,
  RANGESPECIFIER          VARCHAR(32 )   	NULL,
  STDSPECIFIER            VARCHAR(1024 )   	NULL,
  LUTYPE                  VARCHAR(32 )   	NULL,
  NUMBEROFCONTAINER       NUMERIC(20)            NULL,
  TOPUP                   NUMERIC(1)             NULL ) ; 


CREATE TABLE PS_OUTBOUNDAREAASSIGNMENTRULE ( 
  OID                     NUMERIC(20)            NOT NULL,
  PLANOID                 NUMERIC(20)            NULL,
  ORDERNUMBER             NUMERIC(20)            NULL,
  TPOID                   NUMERIC(20)            NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )     NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   	NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   	NULL,
  RANGESPECIFIER          VARCHAR(32 )   	NULL,
  STDSPECIFIER            VARCHAR(1024 )   	NULL,
  AREAOID                 NUMERIC(20)            NULL ) ; 


CREATE TABLE PS_GROUPOFFLIGHTS ( 
  OID                         NUMERIC(20)        NOT NULL,
  TPOID                      NUMERIC(20)        NOT NULL,
  ORDERNUMBER                 NUMERIC(20)        NULL,
  FLIGHTPREFIXSPECIFIER       VARCHAR(1024 ) NULL,
  FLIGHTSUFFIXSPECIFIER       VARCHAR(1024 ) NULL,
  FLIGHTTYPESPECIFIER         VARCHAR(1024 ) NULL,
  FLIGHTDESTINATIONSPECIFIER  VARCHAR(1024 ) NULL,
  RANGESPECIFIER              VARCHAR(32 ) NULL,
  NUMBEROFSEATSSPECIFIER      VARCHAR(1024 ) NULL ) ; 


CREATE TABLE PS_TPSECTION ( 
  OID               NUMERIC(20)          NOT NULL, 
  TPOID            NUMERIC(20)          NOT NULL, 
  NAME              VARCHAR(32)      	NOT NULL, 
  AREAOID           NUMERIC(20)          NULL, 
  ORDERNUMBER       NUMERIC(20)  	    NULL) ; 


CREATE TABLE PS_TPSECTION_PRODUCTDEST ( 
  TPSECTIONOID           NUMERIC(20)	NOT NULL, 
  PDOID                  NUMERIC(20)	NOT NULL,
  ORDERNUMBER            NUMERIC(20)  	NULL) ; 


CREATE TABLE PS_LOGICALPRODUCT ( 
  OID                          NUMERIC(20)       NOT NULL,
  ORDERNUMBER                  NUMERIC(20)       NOT NULL,
  GROUPOFFLIGHTSOID            NUMERIC(20)       NOT NULL,
  CABINCLASSSPECIFIER          VARCHAR(128 ) NULL,
  FLIGHTDESTINATIONSPECIFIER   VARCHAR(128 ) NULL,
  ONWARDCONNECTIONSPECIFIER    VARCHAR(128 ) NULL,
  DESCRIPTION                  VARCHAR(1024 ) NULL,
  LPC                          VARCHAR(128 ) NULL,
  ONWARDDESTINATIONSPECIFIER   VARCHAR(128 ) NULL,
  ONWARDFLIGHTNUMBERSPECIFIER  VARCHAR(512 ) NULL,
  BATCHSPECIFIER               NUMERIC(1)		 NULL,
  ONWARDSPECIFIER              VARCHAR(32 ) NULL,
  ONWARDCABINCLASSSPECIFIER    VARCHAR(128 )  NULL,
  AIRLINEINTERNALDATASPECIFIER VARCHAR(128 ) NULL,
  GROUPBUFFER              VARCHAR(64 ),
  INBOUNDFLIGHTSPECIFIER              VARCHAR(64 )) ; 


CREATE TABLE PS_LOGICALPRODUCTDESTINATION ( 
  OID                    NUMERIC(20)             NOT NULL,
  GROUPOFFLIGHTSOID      NUMERIC(20)             NULL,
  NAME                   VARCHAR(32 )    	NULL,
  PREFERREDTYPE          VARCHAR(32 )      NULL,
  PRODUCTDESTINATIONOID  NUMERIC(20)) ; 


CREATE TABLE PS_LOGICALPRODUCT_LOGICALPD ( 
  LOGICALPRODUCTOID             NUMERIC(20)	NOT NULL, 
  LOGICALPRODUCTDESTINATIONOID  NUMERIC(20)	NOT NULL) ; 


CREATE TABLE PS_OPENCLOSETIMERULE ( 
  OID                    NUMERIC(20)             NOT NULL,
  TPOID                 NUMERIC(20)              NOT NULL,
  ORDERNUMBER            NUMERIC(20)             NULL,
  FLIGHTPREFIXSPECIFIER  VARCHAR(1024 )    NULL,
  FLIGHTSUFFIXSPECIFIER  VARCHAR(1024 )    NULL,
  RANGESPECIFIER         VARCHAR(32 )    	NULL,
  AIRCRAFTTYPESPECIFIER  VARCHAR(1024 )    	NULL,
  AREASPECIFIER          VARCHAR(32 )    	NULL,
  RELCONLOPEN            NUMERIC(20)		NULL,
  RELLASTMINOPEN         NUMERIC(20)		NULL,
  RELTCOPEN              NUMERIC(20)		NULL,
  RELTCCLOSE             NUMERIC(20)		NULL,
  TLLENGTH               NUMERIC(20)		NULL) ; 

CREATE TABLE PS_TACTICALBAGGAGEPLAN ( 
  OID                     NUMERIC(20)            NOT NULL,
  PLANNERORGANIZATION     VARCHAR(32)          NOT NULL,
  DESCRIPTION             VARCHAR(1024 )   NULL,
  ACTIVE                  NUMERIC(1)             NULL,
  STARTDATEOFTYPICALWEEK  DATE                  NULL,
  STARTVALIDITYDATE       DATE                  NULL,
  ENDVALIDITYDATE         DATE                  NULL,
  STATE                   NUMERIC(5)             NULL,
  RULECHANGEDFLAG     VARCHAR(1)          NULL) ; 


CREATE TABLE PS_TPDAY ( 
  OID        NUMERIC(20)    	NOT NULL, 
  TPOID     NUMERIC(20)		NOT NULL, 
  DAYOFWEEK  NUMERIC(1)		NOT NULL) ; 


CREATE TABLE PS_TPFLIGHT (
  OID                    NUMERIC(20)             NOT NULL,
  TPOID                  NUMERIC(20),
  TPDAYOID               NUMERIC(20),
  FLIGHTPREFIX           VARCHAR(3 )       NOT NULL,
  FLIGHTSUFFIX           VARCHAR(10 )      NOT NULL,
  AIRCRAFTCONFIGURATION  VARCHAR(1024 ),
  AIRCRAFTTYPE           VARCHAR(1024 ),
  NROFSEATS              NUMERIC(5),
  ST                     DATE,
  FLIGHTDESTINATIONS     VARCHAR(100 ),
  NATURE                 VARCHAR(1024 ),
  EU                     VARCHAR(1024 ),
  RANGE                  VARCHAR(1024 ),
  AREAOID                NUMERIC(20),
  CREATIONTYPE           NUMERIC(5),
  HANDLEROID             NUMERIC(20),
  BATCH                  NUMERIC(1),
  HRF                    NUMERIC(1),
  OPTMAKEUP              NUMERIC(1) DEFAULT 1,
  LUTYPE                 VARCHAR(32 ),
  CONTAINERNUMBER        NUMERIC(20),
  TOPPINGUP              NUMERIC(1),
  DIRECTION              VARCHAR(32 ),
  GATE                   VARCHAR(32 ),
  RECURRINGEVENTOID      NUMERIC(20),
  REFERENCEFLIGHTOID     NUMERIC(20)) ; 
  

CREATE UNIQUE INDEX PS_TPFLIGHT_UQ1 ON PS_TPFLIGHT
(FLIGHTPREFIX, TPDAYOID, FLIGHTSUFFIX, DIRECTION, RECURRINGEVENTOID);


CREATE TABLE PS_TPSDG ( 
  OID                          NUMERIC(20)       NOT NULL,
  TPOID                       NUMERIC(20),
  TPFLIGHTOID                 NUMERIC(20)       NOT NULL,
  CABINCLASSSPECIFIER          VARCHAR(1024 ) NULL,
  FLIGHTDESTINATIONSPECIFIER   VARCHAR(1024 ) NULL,
  ONWARDCONNECTIONSPECIFIER    VARCHAR(1024 ) NULL,
  DESCRIPTION                  VARCHAR(1024 ) NULL,
  LPC                          VARCHAR(1024 ) NULL,
  ONWARDDESTINATIONSPECIFIER   VARCHAR(1024 ) NULL,
  ONWARDFLIGHTNUMBERSPECIFIER  VARCHAR(1024 ) NULL,
  BATCHSPECIFIER                        VARCHAR(1024 ),
  ONWARDSPECIFIER                       VARCHAR(1024 ),
  ONWARDCABINCLASSSPECIFIER             VARCHAR(1024 ),
  AIRLINEINTERNALDATASPECIFIER          VARCHAR(1024 ),
  GROUPBUFFER              VARCHAR(1024 ),
  INBOUNDFLIGHTSPECIFIER              VARCHAR(1024 )) ; 

CREATE INDEX PS_TPSDG_FK1
 ON PS_TPSDG(TPFLIGHTOID)
;


CREATE TABLE PS_TPALLOC ( 
  OID                         NUMERIC(20)    NOT NULL, 
  TPOID                      NUMERIC(20), 
  TPSDGOID               NUMERIC(20)  	NOT NULL, 
  LPDOID               	NUMERIC(20)  	NULL, 
  AREAOID                     NUMERIC(20),
  PRODUCTDESTINATIONOID       NUMERIC(20),  
  STARTWEEKDAY           NUMERIC(1),
  STARTTIME              DATE,
  ENDWEEKDAY             NUMERIC(1),
  ENDTIME                DATE,
  SERVICE   VARCHAR(32 ) ) ; 

CREATE INDEX PS_TPALLOC_FK1
 ON PS_TPALLOC(TPSDGOID)
;


CREATE TABLE PS_BAGGAGEHANDLERPLAN (
	 OID	    	NUMERIC(20)	NOT NULL
	,STARTDATE	DATE		NOT NULL) ;


CREATE TABLE PS_BHPFLIGHTRULE (
  OID                    NUMERIC(20)             NOT NULL,
  BHPOID                 NUMERIC(20)             NOT NULL,
  ORDERNUMBER            NUMERIC(20)             NOT NULL,
  HANDLEROID             NUMERIC(20)             NOT NULL,
  FLIGHTPREFIXSPECIFIER  VARCHAR(32 )    NOT NULL) ;


CREATE TABLE PS_BHPPRODUCTDESTINATIONMAP (
  OID                    NUMERIC(20)             NOT NULL,
  BHPOID                 NUMERIC(20)             NULL,
  TPOID                  NUMERIC(20)             NULL,
  PRODUCTDESTINATIONOID  NUMERIC(20)             NULL,
  HANDLEROID             NUMERIC(20)             NULL,
  STARTWEEKDAY           NUMERIC(1)              NULL,
  STARTTIME              DATE                   NULL,
  ENDWEEKDAY             NUMERIC(1)		NULL,
  ENDTIME                DATE			NULL) ;

	
CREATE TABLE PNST_ARRIVALBREAKRULE ( 
  OID                             NUMERIC(20)    NOT NULL, 
  ORDERNUMBER                     NUMERIC(20)	NOT NULL, 
  FLIGHTPREFIXSPECIFIER           VARCHAR(32)	NOT NULL, 
  AIRCRAFTTYPESPECIFIER           VARCHAR(32)	NOT NULL, 
  RANGESPECIFIER                  VARCHAR(32)	NOT NULL,  
  OPENPERIOD                      NUMERIC(20)	NOT NULL, 
  ARRIVALBREAKINPUTSPECIFIER      VARCHAR(32)	NOT NULL) ; 


CREATE TABLE PS_BATCHRULE
(
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NOT NULL,
  TPOID                  NUMERIC(20)            NOT NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )   NOT NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   NOT NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   NOT NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   NOT NULL,
  RANGESPECIFIER          VARCHAR(32 )   NOT NULL,
  STDSPECIFIER            VARCHAR(1024 )   NOT NULL,
  AREASPECIFIER           VARCHAR(32 )   NOT NULL,
  BATCH                   NUMERIC(1)             NOT NULL) ; 

CREATE TABLE PS_TCRULE
(
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NOT NULL,
  TPOID                   NUMERIC(20)            NOT NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )   	NOT NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NOT NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   	NOT NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   	NOT NULL,
  RANGESPECIFIER          VARCHAR(32 )   	NOT NULL,
  HRFSPECIFIER            VARCHAR(32 )   	NOT NULL,
  STDSPECIFIER            VARCHAR(1024 )   	NOT NULL,
  TPSECTIONSPECIFIER      VARCHAR(32 )   	NOT NULL,
  AREASPECIFIER           VARCHAR(32 )   	NOT NULL,
  PRODUCTDESTINATIONOID   NUMERIC(20)            NOT NULL) ; 

CREATE TABLE PS_LONGTERMMAINTENANCE
(
  OID                 NUMERIC(20)                NOT NULL,
  TOPOLOGYELEMENTOID  NUMERIC(20)                NOT NULL,
  STARTDATE           DATE                      NOT NULL,
  STARTTIME           DATE                      NOT NULL,
  ENDDATE             DATE                      NOT NULL,
  ENDTIME             DATE                      NOT NULL) ; 

CREATE TABLE PS_HANDLER
(
  OID                   NUMERIC(20)              NOT NULL,
  NAME                  VARCHAR(1024 )     NOT NULL,
  HANDLER_KIND  NUMERIC(1),              
  ORGANIZATION          CHAR(3 ),
  COLOR                 VARCHAR(20 ),
  ALLOWEDAREAS          VARCHAR(40 ),
  ACTIVE CHAR(1 )) ; 

CREATE TABLE PS_TPSDGDEST
(
  OID            NUMERIC(20)                     NOT NULL,
  TBPOID         NUMERIC(20)                     NOT NULL,
  RCPRODDESTOID  NUMERIC(20)                     NOT NULL,  
  STARTWEEKDAY           NUMERIC(1)              NOT NULL,
  STARTTIME              DATE                   NOT NULL,
  ENDWEEKDAY             NUMERIC(1)              NOT NULL,
  ENDTIME                DATE                   NOT NULL) ;

-- Batos (quxr)
-- PS_CAPACITYPARAMETERSRULE
CREATE TABLE PS_CAPACITYPARAMETERSRULE ( 
  OID                         NUMERIC(20)    	NOT NULL, 
  TPOID                      NUMERIC(20)		NOT NULL, 
  ORDERNUMBER                 NUMERIC(20)		NOT NULL, 
  FLIGHTPREFIXSPECIFIER       VARCHAR(32)	NOT NULL, 
  FLIGHTSUFFIXSPECIFIER       VARCHAR(32)	NOT NULL,
  CABINCLASSSPECIFIER         VARCHAR(32)	NOT NULL, 
  FLIGHTDESTINATIONSPECIFIER  VARCHAR(32)	NOT NULL, 
  RANGESPECIFIER              VARCHAR(32)	NOT NULL,
  AIRCRAFTTYPESPECIFIER       VARCHAR(32)	NOT NULL,
  TYPEOFFLIGHTSPECIFIER       VARCHAR(32)	NOT NULL,
  FLIGHTOCCUPATION            NUMERIC(20,5)	    NOT NULL,
  HANDLETIMEPERPAX            NUMERIC(20)		NOT NULL,
  MAXPASSENGERWAITTIME        NUMERIC(20)		NOT NULL) ; 


-- PS_INPUTPROFILE
CREATE TABLE PS_INPUTPROFILE ( 
  OID                     NUMERIC(20)      NOT NULL, 
  ORDERNUMBER             NUMERIC(20)  	  NOT NULL, 
  HANDLEROID              NUMERIC(20)	    NOT NULL, 
  FLIGHTPREFIXSPECIFIER   VARCHAR(32)	NOT NULL, 
  FLIGHTSUFFIXSPECIFIER   VARCHAR(32)	NOT NULL,
  TYPEOFFLIGHTSPECIFIER   VARCHAR(32)	NOT NULL,
  CABINCLASSSPECIFIER     VARCHAR(32)	NOT NULL,
  AREASPECIFIER           VARCHAR(32)	NOT NULL,
  RANGESPECIFIER          VARCHAR(32)	NOT NULL,
  STDSPECIFIER            VARCHAR(32)	NOT NULL) ; 


-- PS_INPUTPROFILEPERIOD
CREATE TABLE PS_INPUTPROFILEPERIOD ( 
  OID                       NUMERIC(20)      NOT NULL, 
  ORDERNUMBER               NUMERIC(20)  	  NOT NULL, 
  INPUTPROFILEOID           NUMERIC(20)	    NOT NULL, 
  RELATIVETIMESPECIFIER     VARCHAR(32)	NOT NULL, 
  PERIODPERCENT             NUMERIC(20,2)    NOT NULL) ; 


-- Create new table Lock list
create table PS_LOCKINFO (
	OID NUMERIC(20) not null,
    TYPE VARCHAR(32) not null,
    OWNER VARCHAR(1024) not null,
	CREATION DATE not null,             
	LOCKEDOID NUMERIC(20),      
	RETENTION NUMERIC(20) ) ;

comment on table PS_LOCKINFO is 'The table includes all lock info for PNST';


CREATE TABLE PS_STT ( 
  OID                    NUMERIC(20)             NOT NULL,
  FLIGHTPREFIX           VARCHAR(3 )       NOT NULL,
  FLIGHTSUFFIX           VARCHAR(10 )      NOT NULL,
  DIRECTION				 VARCHAR(1 )       NOT NULL,
  STARTDATE              DATE                   NOT NULL,
  ENDTDATE               DATE                   NOT NULL,
  ST                     DATE                   NOT NULL,
  WEEKDAYS     			 VARCHAR(100 ),
  AIRCRAFTCONFIGURATION  VARCHAR(1024 ),
  AIRCRAFTTYPE           VARCHAR(1024 ),
  FLIGHTDESTINATIONS     VARCHAR(100 ),
  NROFSEATS              NUMERIC(5),
  NATURE                 VARCHAR(32 ),
  EU                     VARCHAR(32 ),
  RANGE                  VARCHAR(32 ),
  HANDLER             VARCHAR(32 ),  
  REFTOMESSAGEID         VARCHAR(500 )) ; 

  
CREATE TABLE PS_STT_INFO ( 
  OID                    NUMERIC(20)             NOT NULL,
  FLIGHTPREFIX           VARCHAR(3 ),
  FLIGHTSUFFIX           VARCHAR(10 ),
  STATUS             VARCHAR(10 ),
  REFTOMESSAGEID         VARCHAR(500 )) ; 
  
CREATE TABLE PS_HRFDEFINITION ( 
  OID                     NUMERIC(20)            NOT NULL,
  FLIGHTNUMBER  		  VARCHAR(32 )   	NOT NULL) ; 
  

CREATE TABLE PS_STT_REQUEST  (
  MESSAGEID  VARCHAR(200 ),
  STARTDATE  DATE,
  CREATEDDATE  TIMESTAMP(3) )	; 


CREATE TABLE PS_INBOUNDAREAASSIGNMENTRULE ( 
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NULL,
  PLANOID                   NUMERIC(20)            NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )     NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   	NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   	NULL,
  RANGESPECIFIER          VARCHAR(32 )   	NULL,
  STDSPECIFIER            VARCHAR(1024 )   	NULL,
  EURAREAOID              NUMERIC(20)            NULL,
  ICAAREAOID              NUMERIC(20)            NULL,
  SHOCONAREAOID           NUMERIC(20)            NULL ) ; 


CREATE TABLE PS_INBOUNDAREAASSIGNMENT ( 
  TPFLIGHTOID                   NUMERIC(20)    NOT NULL,
  TYPE   VARCHAR(32 )     NOT NULL,
  AREAOID           NUMERIC(20)            NULL ) ; 
  
create unique index PS_INBOUNDAREAASSIGNMENT_UQ1 on PS_INBOUNDAREAASSIGNMENT (
	TPFLIGHTOID,
	TYPE) ;   

CREATE TABLE PS_OUTBOUNDAREAASSIGNMENTPLAN (
	 OID	    	NUMERIC(20)	NOT NULL
	,STARTDATE	DATE		NOT NULL) ;


CREATE TABLE PS_BUFFERGROUPRULE ( 
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NULL,
  TPOID                   NUMERIC(20)            NOT NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )     NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NULL,
  DESTINATIONSPECIFIER    VARCHAR(1024 )   	NULL,
  ONWARDSPECIFIER   	  VARCHAR(32 )   	NULL,
  CABINCLASSSPECIFIER     VARCHAR(32 )   	NULL,
  BUFFERGROUP             VARCHAR(1024 )   NULL) ; 


CREATE TABLE PS_TLRULE
(
  OID                     NUMERIC(20)            NOT NULL,
  ORDERNUMBER             NUMERIC(20)            NOT NULL,
  TPOID                   NUMERIC(20)            NOT NULL,
  FLIGHTPREFIXSPECIFIER   VARCHAR(1024 )   	NOT NULL,
  FLIGHTSUFFIXSPECIFIER   VARCHAR(1024 )   	NOT NULL,
  NUMBEROFSEATSSPECIFIER  VARCHAR(1024 )   	NOT NULL,
  AIRCRAFTTYPESPECIFIER   VARCHAR(1024 )   	NOT NULL,
  RANGESPECIFIER          VARCHAR(32 )   	NOT NULL,
  HRFSPECIFIER            VARCHAR(32 )   	NOT NULL,
  HANDLERSPECIFIER            VARCHAR(1024 )   	NOT NULL,
  TPSECTIONSPECIFIER      VARCHAR(32 )   	NOT NULL,
  AREASPECIFIER           VARCHAR(32 )   	NOT NULL,
  PRODUCTDESTINATIONOID   NUMERIC(20)            NOT NULL) ; 


CREATE TABLE PS_LUTYPE (LUTYPE VARCHAR(8) NOT NULL ) ; 


--------------------------------------------------------------------------- 
-- 	Script to build constraints for PNST South
--------------------------------------------------------------------------- 

--prompt "About to drop PNST constraints"

--WHENEVER SQLERROR CONTINUE;

--WHENEVER SQLERROR EXIT FAILURE ROLLBACK;

--PROMPT "About to create PNST primary key constraints"

ALTER TABLE PS_RECURRINGEVENT ADD CONSTRAINT PS_RECURRINGEVENT_PK
 PRIMARY KEY (OID);
 
ALTER TABLE PS_CONTAINERUSEAGERULE ADD CONSTRAINT PS_CONTAINERUSEAGERULE_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_OUTBOUNDAREAASSIGNMENTRULE ADD CONSTRAINT PS_OUTAREAASSIGNMENTRULE_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_GROUPOFFLIGHTS ADD CONSTRAINT PS_GROUPOFFLIGHTS_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_TPSECTION ADD CONSTRAINT PS_TPSECTION_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_LOGICALPRODUCT ADD CONSTRAINT PS_LOGICALPRODUCT_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_LOGICALPRODUCTDESTINATION ADD CONSTRAINT PS_LOGICALPRODUCTDEST_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_OPENCLOSETIMERULE ADD CONSTRAINT PS_OPENCLOSETIMERULE_PK
 PRIMARY KEY (OID);
  
 ALTER TABLE PS_TACTICALBAGGAGEPLAN ADD CONSTRAINT PS_TACTICALBAGGAGEPLAN_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_TPDAY ADD CONSTRAINT PS_TPDAY_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_TPFLIGHT ADD CONSTRAINT PS_TPFLIGHT_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_TPSDG ADD CONSTRAINT PS_TPSDG_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_TPALLOC ADD CONSTRAINT PS_TPALLOC_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_BAGGAGEHANDLERPLAN ADD CONSTRAINT PS_BAGGAGEHANDLERPLAN_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_BHPFLIGHTRULE ADD CONSTRAINT PS_BHPFLIGHTRULE_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_BHPPRODUCTDESTINATIONMAP ADD CONSTRAINT PS_BHPPRODUCTDESTINATIONMAP_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PNST_ARRIVALBREAKRULE ADD CONSTRAINT PNST_ARRIVALBREAKRULE_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_BATCHRULE ADD CONSTRAINT PS_BATCHRULE_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_TCRULE ADD CONSTRAINT PS_TCRULE_PK
 PRIMARY KEY (OID);
 
 ALTER TABLE PS_LONGTERMMAINTENANCE ADD CONSTRAINT PS_LONGTERMMAINTENANCE_PK
 PRIMARY KEY (OID);
 

 ALTER TABLE PS_HANDLER ADD CONSTRAINT PS_HANDLER_PK
 PRIMARY KEY (OID);
 

 ALTER TABLE PS_TPSDGDEST ADD CONSTRAINT PS_TPSDGDEST_PK
 PRIMARY KEY (OID);
 


 ALTER TABLE PS_INBOUNDAREAASSIGNMENTRULE ADD CONSTRAINT PS_INAREAASSIGNMENTRULE_PK
 PRIMARY KEY (OID);
  
-- BATOS (quxr)
-- PS_CAPACITYPARAMETERSRULE
 ALTER TABLE PS_CAPACITYPARAMETERSRULE ADD CONSTRAINT PS_CAPACITYPARAMETERSRULE_PK
 PRIMARY KEY (OID);
 
-- PS_INPUTPROFILE
 ALTER TABLE PS_INPUTPROFILE ADD CONSTRAINT PS_INPUTPROFILE_PK
 PRIMARY KEY (OID);
 
-- PS_INPUTPROFILEPERIOD
 ALTER TABLE PS_INPUTPROFILEPERIOD ADD CONSTRAINT PS_INPUTPROFILEPERIOD_PK
 PRIMARY KEY (OID);
  
-- PS_STT
 ALTER TABLE PS_STT ADD CONSTRAINT PS_STT_PK
 PRIMARY KEY (OID);
 
 -- PS_STTINFO
 ALTER TABLE PS_STT_INFO ADD CONSTRAINT PS_STT_INFO_PK
 PRIMARY KEY (OID);
 
 
-- PS_HRFDEFINITION
 ALTER TABLE PS_HRFDEFINITION ADD CONSTRAINT PS_HRFDEFINITION_PK
 PRIMARY KEY (OID);
 

-- PS_STT_REQUEST
ALTER TABLE PS_STT_REQUEST ADD   CONSTRAINT PS_STT_REQUEST_PK 
PRIMARY KEY (MESSAGEID);
 
 
-- PS_STT_LOCKINFO
ALTER TABLE PS_LOCKINFO ADD   CONSTRAINT PS_LOCKINFO_PK 
PRIMARY KEY (OID);
 

-- new for BackBone
 ALTER TABLE PS_OUTBOUNDAREAASSIGNMENTPLAN ADD CONSTRAINT PS_OUTAREAASSIGNMENTPLAN_PK
 PRIMARY KEY (OID);
 

 ALTER TABLE PS_BUFFERGROUPRULE ADD CONSTRAINT PS_BUFFERGROUPRULE_PK
 PRIMARY KEY (OID);
 

--PROMPT "About to create PNST foreign key constraints"

-- Add foreign key constraints to table PS_CONTAINERUSEAGERULE.
ALTER TABLE PS_CONTAINERUSEAGERULE
	ADD CONSTRAINT PS_CONTAINERUSEAGERULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;

-- Add foreign key constraints to table PS_OUTBOUNDAREAASSIGNMENTRULE.
 ALTER TABLE PS_OUTBOUNDAREAASSIGNMENTRULE
	ADD CONSTRAINT PS_OUTAREAASSIGNMENTRULE_FK1 FOREIGN KEY (
		AREAOID)
	 REFERENCES RC_AREA (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_OUTBOUNDAREAASSIGNMENTRULE
	ADD CONSTRAINT PS_OUTAREAASSIGNMENTRULE_FK2 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;

ALTER TABLE PS_OUTBOUNDAREAASSIGNMENTRULE
ADD CONSTRAINT PS_OUTAREAASSIGNMENTRULE_FK3 FOREIGN KEY (PLANOID)
REFERENCES PS_OUTBOUNDAREAASSIGNMENTPLAN (OID) ON DELETE CASCADE;
-- Add foreign key constraints to table PS_INBOUNDAREAASSIGNMENTRULE. 
  
  ALTER TABLE PS_INBOUNDAREAASSIGNMENTRULE
	ADD CONSTRAINT PS_INAREAASSIGNMENTRULE_FK1 FOREIGN KEY (
		EURAREAOID)
	 REFERENCES RC_AREA (
		OID) ON DELETE CASCADE; 
		
 ALTER TABLE PS_INBOUNDAREAASSIGNMENTRULE
	ADD CONSTRAINT PS_INAREAASSIGNMENTRULE_FK2 FOREIGN KEY (
		ICAAREAOID)
	 REFERENCES RC_AREA (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_INBOUNDAREAASSIGNMENTRULE
	ADD CONSTRAINT PS_INAREAASSIGNMENTRULE_FK3 FOREIGN KEY (
		SHOCONAREAOID)
	 REFERENCES RC_AREA (
		OID) ON DELETE CASCADE; 	


ALTER TABLE PS_INBOUNDAREAASSIGNMENTRULE
ADD CONSTRAINT PS_INAREAASSIGNMENTRULE_FK4 FOREIGN KEY (PLANOID)
REFERENCES PS_OUTBOUNDAREAASSIGNMENTPLAN (OID) ON DELETE CASCADE;

-- Add foreign key constraints to table GROUPOFFLIGHTS.
 ALTER TABLE PS_GROUPOFFLIGHTS
	ADD CONSTRAINT PS_GROUPOFFLIGHTS_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table TPSECTION
 ALTER TABLE PS_TPSECTION
	ADD CONSTRAINT PS_TPSECTION_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_TPSECTION_PRODUCTDEST
	ADD CONSTRAINT PS_TPSECTION_PD_FK1 FOREIGN KEY (
		TPSECTIONOID)
	 REFERENCES PS_TPSECTION (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table LOGICALPRODUCT
 ALTER TABLE PS_LOGICALPRODUCT
	ADD CONSTRAINT PS_LOGICALPRODUCT_FK1 FOREIGN KEY (
		GROUPOFFLIGHTSOID)
	 REFERENCES PS_GROUPOFFLIGHTS (
		OID) ON DELETE CASCADE; 


-- Add FOREIGN KEY constraints to table LOGICALPRODUCTDESTINATION
 ALTER TABLE PS_LOGICALPRODUCTDESTINATION
	ADD CONSTRAINT PS_LOGICALPRODUCTDEST_FK1 FOREIGN KEY (
		GROUPOFFLIGHTSOID)
	 REFERENCES PS_GROUPOFFLIGHTS (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_LOGICALPRODUCTDESTINATION
	ADD CONSTRAINT PS_LOGICALPRODUCTDEST_FK2 FOREIGN KEY (
		PRODUCTDESTINATIONOID)
	 REFERENCES RC_PRODUCTDESTINATION (
		OID); 


-- Add FOREIGN KEY constraints to table LOGICALPRODUCT - LOGICALPRODUCTDESTINATION
 ALTER TABLE PS_LOGICALPRODUCT_LOGICALPD
	ADD CONSTRAINT PS_LOGICALPRODUCT_LPD_FK1 FOREIGN KEY (
		LOGICALPRODUCTOID)
	 REFERENCES PS_LOGICALPRODUCT (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_LOGICALPRODUCT_LOGICALPD
	ADD CONSTRAINT PS_LOGICALPRODUCT_LPD_FK2 FOREIGN KEY (
		LOGICALPRODUCTDESTINATIONOID)
	 REFERENCES PS_LOGICALPRODUCTDESTINATION (
		OID) ON DELETE CASCADE; 


-- Add FOREIGN KEY constraints to table OPENCLOSETIMERULE
 ALTER TABLE PS_OPENCLOSETIMERULE
	ADD CONSTRAINT PS_OPENCLOSETIMERULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 


-- Add FOREIGN KEY constraints to table TPDAY
 ALTER TABLE PS_TPDAY
	ADD CONSTRAINT PS_TPDAY_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 



-- Add FOREIGN KEY constraints to table TPFLIGHT
 ALTER TABLE PS_TPFLIGHT
	ADD CONSTRAINT PS_TPFLIGHT_FK1 FOREIGN KEY (
		TPDAYOID)
	 REFERENCES PS_TPDAY (
		OID) ON DELETE CASCADE; 


-- Add FOREIGN KEY constraints to table TPFLIGHT
 ALTER TABLE PS_TPFLIGHT
	ADD CONSTRAINT PS_TPFLIGHT_FK2 FOREIGN KEY (
		AREAOID)
	 REFERENCES RC_AREA (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table TPFLIGHT
 ALTER TABLE PS_TPFLIGHT
	ADD CONSTRAINT PS_TPFLIGHT_FK3 FOREIGN KEY (
		HANDLEROID)
	 REFERENCES PS_HANDLER (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table TPFLIGHT
 ALTER TABLE PS_TPFLIGHT
	ADD CONSTRAINT PS_TPFLIGHT_FK4 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 
 ALTER TABLE PS_TPFLIGHT
	ADD CONSTRAINT PS_TPFLIGHT_FK5 FOREIGN KEY (
		RECURRINGEVENTOID) 
	REFERENCES PS_RECURRINGEVENT (
		OID) ON DELETE CASCADE;

-- Add FOREIGN KEY constraints to table TPSDG
 ALTER TABLE PS_TPSDG
	ADD CONSTRAINT PS_TPSDG_FK1 FOREIGN KEY (
		TPFLIGHTOID)
	 REFERENCES PS_TPFLIGHT (
		OID) ON DELETE CASCADE; 


 ALTER TABLE PS_TPSDG
	ADD CONSTRAINT PS_TPSDG_FK3 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table TPALLOC
 ALTER TABLE PS_TPALLOC
	ADD CONSTRAINT PS_TPALLOC_FK1 FOREIGN KEY (
		TPSDGOID)
	 REFERENCES PS_TPSDG (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_TPALLOC
	ADD CONSTRAINT PS_TPALLOC_FK2 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table PS_BHPFLIGHTRULE.
 ALTER TABLE PS_BHPFLIGHTRULE
	ADD CONSTRAINT PS_BHPFLIGHTRULE_FK1 FOREIGN KEY (
		BHPOID)
	 REFERENCES PS_BAGGAGEHANDLERPLAN (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_BHPFLIGHTRULE
	ADD CONSTRAINT PS_BHPFLIGHTRULE_FK2 FOREIGN KEY (
		HANDLEROID)
	 REFERENCES PS_HANDLER (
		OID) ON DELETE CASCADE; 

-- Add FOREIGN KEY constraints to table PS_BHPPRODUCTDESTINATIONMAP.
 ALTER TABLE PS_BHPPRODUCTDESTINATIONMAP
	ADD CONSTRAINT PS_BHPPRODDESTMAP_FK1 FOREIGN KEY (
		BHPOID)
	 REFERENCES PS_BAGGAGEHANDLERPLAN (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_BHPPRODUCTDESTINATIONMAP
	ADD CONSTRAINT PS_BHPPRODDESTMAP_FK2 FOREIGN KEY (
		PRODUCTDESTINATIONOID)
	 REFERENCES RC_PRODUCTDESTINATION (
		OID) ON DELETE CASCADE; 

 ALTER TABLE PS_BHPPRODUCTDESTINATIONMAP
	ADD CONSTRAINT PS_BHPPRODDESTMAP_FK3 FOREIGN KEY (
		HANDLEROID)
	 REFERENCES PS_HANDLER (
		OID) ON DELETE CASCADE;

 ALTER TABLE PS_BHPPRODUCTDESTINATIONMAP
	ADD CONSTRAINT PS_BHPPRODDESTMAP_FK4 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;

 ALTER TABLE PS_BATCHRULE
	ADD CONSTRAINT PS_BATCHRULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;

 ALTER TABLE PS_TCRULE
	ADD CONSTRAINT PS_TCRULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;

ALTER TABLE PS_TPSDGDEST ADD 
  CONSTRAINT PS_TPSDGDEST_FK1 FOREIGN KEY (TBPOID) 
    REFERENCES PS_TACTICALBAGGAGEPLAN (OID)
    ON DELETE CASCADE;


ALTER TABLE PS_TPSDGDEST ADD 
  CONSTRAINT PS_TPSDGDEST_FK2 FOREIGN KEY (RCPRODDESTOID) 
    REFERENCES RC_PRODUCTDESTINATION (OID);

-- BATOS
-- PS_CAPACITYPARAMETERSRULE
 ALTER TABLE PS_CAPACITYPARAMETERSRULE
	ADD CONSTRAINT PS_CAPACITYPARAMETERSRULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE; 

-- PS_INPUTPROFILEPERIOD
 ALTER TABLE PS_INPUTPROFILEPERIOD
	ADD CONSTRAINT PS_INPUTPROFILEPERIOD_FK1 FOREIGN KEY (
		INPUTPROFILEOID)
	 REFERENCES PS_INPUTPROFILE (
		OID) ON DELETE CASCADE; 

ALTER TABLE PS_STT ADD 
  CONSTRAINT REF_STT_REQ FOREIGN KEY (REFTOMESSAGEID) 
    REFERENCES PS_STT_REQUEST (MESSAGEID)
    ON DELETE CASCADE;
    
    
ALTER TABLE PS_STT_INFO ADD 
  CONSTRAINT REF_STT_INFO_REQ FOREIGN KEY (REFTOMESSAGEID) 
    REFERENCES PS_STT_REQUEST (MESSAGEID)
    ON DELETE CASCADE;

 
ALTER TABLE PS_STT_REQUEST ADD 
  CONSTRAINT UNIQUE_UN1 UNIQUE (STARTDATE);
      
 
ALTER TABLE PS_LOCKINFO ADD 
  CONSTRAINT UNIQUE_TYPE_LOCKEDOID UNIQUE (LOCKEDOID, TYPE);
    


ALTER TABLE PS_INBOUNDAREAASSIGNMENT
	ADD CONSTRAINT PS_INBOUNDAREAASSIGNMENT_FK1 FOREIGN KEY (
		TPFLIGHTOID)
	 REFERENCES PS_TPFLIGHT (
		OID) ON DELETE CASCADE;

-- new for BackBone
 ALTER TABLE PS_BUFFERGROUPRULE
	ADD CONSTRAINT PS_BUFFERGROUPRULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;
		
 ALTER TABLE PS_TLRULE ADD CONSTRAINT PS_TLRULE_PK
 PRIMARY KEY (OID);
 
 
 ALTER TABLE PS_TLRULE
	ADD CONSTRAINT PS_TLRULE_FK1 FOREIGN KEY (
		TPOID)
	 REFERENCES PS_TACTICALBAGGAGEPLAN (
		OID) ON DELETE CASCADE;




--prompt "About to create PS sequences"


--Add sequences
CREATE SEQUENCE SEQ_PSRECURRINGEVENT increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSCONTAINERUSEAGERULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSOUTAREAASSIGNMENTRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBAGGAGEHANDLERPLANRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSGROUPOFFLIGHTS increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPSECTION increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSLOGICALPRODUCT increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSLOGICALPRODUCTDEST increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTACTICALBAGGAGEPLAN increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPDAY increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPFLIGHT increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPSDG increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPALLOC increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSOPENCLOSETIMERULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBAGGAGEHANDLERPLAN increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBHPFLIGHTRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBHPPRODUCTDESTINATIONMAP increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PNSTARRIVALBREAKRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;

CREATE SEQUENCE SEQ_PSTCRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBATCHRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSLONGTERMMAINTENANCE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSHANDLER increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTPSDGDEST increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
-- BATOS
CREATE SEQUENCE SEQ_PSCAPACITYPARAMETERSRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSINPUTPROFILE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSINPUTPROFILEPERIOD increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
-- BATOS end
CREATE SEQUENCE SEQ_PSLOCKINFO increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSSTT increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSSTTINFO increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSHRFDEFINITION increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSSTTREQUEST increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSINAREAASSIGNMENTRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
-- new for BackBone
CREATE SEQUENCE SEQ_OAP increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSBUFFERGROUPRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;
CREATE SEQUENCE SEQ_PSTLRULE increment by 1 cache 1 start with 1 minvalue 1 maxvalue 99999999 cycle;


